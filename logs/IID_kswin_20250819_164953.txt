Loading project configuration... 
Success
[92mINFO [0m:      Starting Flower ServerApp, config: num_rounds=5, no round_timeout
[92mINFO [0m:      
[92mINFO [0m:      [INIT]
[92mINFO [0m:      Using initial global parameters provided by strategy
[92mINFO [0m:      Starting evaluation of initial global parameters
[92mINFO [0m:      Evaluation returned no results (`None`)
[92mINFO [0m:      
[92mINFO [0m:      [ROUND 1]
[92mINFO [0m:      configure_fit: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_fit: received 0 results and 10 failures
[92mINFO [0m:      configure_evaluate: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_evaluate: received 0 results and 10 failures
[92mINFO [0m:      
[92mINFO [0m:      [ROUND 2]
[92mINFO [0m:      configure_fit: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_fit: received 0 results and 10 failures
[92mINFO [0m:      configure_evaluate: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_evaluate: received 0 results and 10 failures
[92mINFO [0m:      
[92mINFO [0m:      [ROUND 3]
[92mINFO [0m:      configure_fit: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_fit: received 0 results and 10 failures
[92mINFO [0m:      configure_evaluate: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_evaluate: received 0 results and 10 failures
[92mINFO [0m:      
[92mINFO [0m:      [ROUND 4]
[92mINFO [0m:      configure_fit: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_fit: received 0 results and 10 failures
[92mINFO [0m:      configure_evaluate: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_evaluate: received 0 results and 10 failures
[92mINFO [0m:      
[92mINFO [0m:      [ROUND 5]
[92mINFO [0m:      configure_fit: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_fit: received 0 results and 10 failures
[92mINFO [0m:      configure_evaluate: strategy sampled 10 clients (out of 10)
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71738, ip=192.168.1.146, actor_id=19cffdde5b6ef4442bfea91701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x7f677c0bf940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71735, ip=192.168.1.146, actor_id=f9cd4edbdcb821bcccc3fec401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75824000b940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71739, ip=192.168.1.146, actor_id=1306225958d82dff74dcd65301000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x70cdd01cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[91mERROR [0m:     An exception was raised when processing a message by RayBackend
[91mERROR [0m:     [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.
[91mERROR [0m:     Traceback (most recent call last):
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/vce_api.py", line 112, in worker
    out_mssg, updated_context = backend.process_message(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 187, in process_message
    raise ex
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/server/superlink/fleet/vce/backend/raybackend.py", line 175, in process_message
    ) = self.pool.fetch_result_and_return_actor_to_pool(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 480, in fetch_result_and_return_actor_to_pool
    _, out_mssg, updated_context = ray.get(future)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/ray/_private/worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 144, in __call__
    return self._call(message, context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/client/message_handler/message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 121, in client_fn
    return FlowerClient(trainloader, valloader, local_epochs, learning_rate,
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/client_app.py", line 37, in __init__
    self.drift_detector = DriftDetector(num_classes=10, window_size=100, threshold=0.1)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/pytorchexample/drift_detector.py", line 93, in __init__
    self._river = KSWIN(alpha=0.005, window_size=self.window_size)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/river/drift/kswin.py", line 96, in __init__
    raise ValueError("stat_size must be smaller than window_size.")
ValueError: stat_size must be smaller than window_size.

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=71737, ip=192.168.1.146, actor_id=21714e945f1fd6fb9375fcc701000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x75ebe05cb940>)
  File "/mnt/hd/Repositories/TCC_MLOps_Drift_Detection_Federated/.venv/lib/python3.10/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: stat_size must be smaller than window_size.

[92mINFO [0m:      aggregate_evaluate: received 0 results and 10 failures
[92mINFO [0m:      
[92mINFO [0m:      [SUMMARY]
[92mINFO [0m:      Run finished 5 round(s) in 12.97s
[92mINFO [0m:      
[SERVER] Round 1: GlobalAcc=0.0000 | Drift clients = []
[SERVER] Round 2: GlobalAcc=0.0000 | Drift clients = []
[SERVER] Round 3: GlobalAcc=0.0000 | Drift clients = []
[SERVER] Round 4: GlobalAcc=0.0000 | Drift clients = []
[SERVER] Round 5: GlobalAcc=0.0000 | Drift clients = []
